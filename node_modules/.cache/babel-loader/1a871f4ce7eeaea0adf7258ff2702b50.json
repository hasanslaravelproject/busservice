{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\projectbus\\\\ReactApp\\\\src\\\\components\\\\bus_categories\\\\Bus_CategoriesTable.js\",\n    _s = $RefreshSig$();\n\nimport MaterialTable from 'material-table';\nimport React, { useEffect, useState } from 'react';\nimport tableIcons from '../templates/TableIcons';\nimport getColumns from './Bus_CategoriesColumns';\nimport Edit from \"@material-ui/icons/Edit\";\nimport { Switch } from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport { AddBox } from \"@material-ui/icons\";\nimport { deleteBus_Categories, getBus_Categories } from \"../../repo/bus_categoriesRepo\";\nimport { Loading } from \"../templates/Loading\";\n/*\r\nDocumentation on developing the Material-Table can be found at https://material-table.com/\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Bus_CategoriesTable = props => {\n  _s();\n\n  const history = props.history;\n  const [columns, setColumns] = useState(getColumns({}));\n  const [loading, setLoading] = useState(false); //Here we call delete\n\n  const handleRowDelete = (oldData, resolve) => {\n    setLoading(true);\n    deleteBus_Categories(oldData.id).then(res => {\n      resolve();\n      setLoading(false);\n    }).catch(error => {\n      resolve();\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      minRows: 20,\n      title: \"Bus_Categories Data\",\n      columns: columns,\n      data: async (query) => {\n        setLoading(true);\n        const res = await getBus_Categories(query.page, query.pageSize, query.search);\n        setLoading(false);\n        return {\n          data: res.data,\n          page: query.page,\n          totalCount: parseInt(res.total)\n        };\n      },\n      options: {\n        sorting: true,\n        actionsColumnIndex: -1,\n        pageSize: 20,\n        toolbar: true,\n        paging: true\n      },\n      actions: [{\n        icon: () => /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 28\n        }, this),\n        tooltip: 'Edit',\n        onClick: (event, rowData) => {\n          history.push({\n            pathname: `/bus_categories/update/${rowData.id}`,\n            user: rowData\n          });\n        }\n      }, {\n        icon: () => /*#__PURE__*/_jsxDEV(AddBox, {\n          variant: \"contained\",\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 23\n        }, this),\n        tooltip: 'Add New',\n        // This makes add button to appear in table toolbar instead for each row\n        isFreeAction: true,\n        onClick: (event, rowData) => {\n          history.push(\"/bus_categories/add\");\n        }\n      }],\n      icons: tableIcons,\n      editable: {\n        onRowDelete: oldData => new Promise(resolve => {\n          handleRowDelete(oldData, resolve);\n        })\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Bus_CategoriesTable, \"ItgnYk0lgCUF36Sr7FU/VV0WMVE=\");\n\n_c = Bus_CategoriesTable;\nexport default _c2 = withRouter(Bus_CategoriesTable);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Bus_CategoriesTable\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/xampp/htdocs/projectbus/ReactApp/src/components/bus_categories/Bus_CategoriesTable.js"],"names":["MaterialTable","React","useEffect","useState","tableIcons","getColumns","Edit","Switch","withRouter","AddBox","deleteBus_Categories","getBus_Categories","Loading","Bus_CategoriesTable","props","history","columns","setColumns","loading","setLoading","handleRowDelete","oldData","resolve","id","then","res","catch","error","query","page","pageSize","search","data","totalCount","parseInt","total","sorting","actionsColumnIndex","toolbar","paging","icon","tooltip","onClick","event","rowData","push","pathname","user","isFreeAction","onRowDelete","Promise"],"mappings":"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","sourcesContent":["import MaterialTable from 'material-table';\r\nimport React, {useEffect, useState} from 'react';\r\nimport tableIcons from '../templates/TableIcons';\r\nimport getColumns from './Bus_CategoriesColumns';\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport { Switch } from \"@material-ui/core\";\r\nimport {withRouter} from \"react-router\";\r\nimport {AddBox} from \"@material-ui/icons\";\r\nimport {deleteBus_Categories, getBus_Categories} from \"../../repo/bus_categoriesRepo\";\r\nimport { Loading } from \"../templates/Loading\";\r\n/*\r\nDocumentation on developing the Material-Table can be found at https://material-table.com/\r\n*/\r\n\r\nconst Bus_CategoriesTable = (props) => {\r\n    const history = props.history;\r\n    const [columns, setColumns] = useState(getColumns({}));\r\n    const [loading, setLoading] = useState(false);\r\n    //Here we call delete\r\n    const handleRowDelete = (oldData, resolve) => {\r\n    setLoading(true);\r\n        deleteBus_Categories(oldData.id)\r\n            .then(res => {\r\n                resolve();\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                resolve();\r\n                setLoading(false);\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n    <div>\r\n    <MaterialTable\r\n        minRows={20}\r\n        title=\"Bus_Categories Data\"\r\n        columns={columns}\r\n        data={async(query)=>\r\n            {   setLoading(true);\r\n                const res = await getBus_Categories(query.page,query.pageSize,query.search);\r\n                setLoading(false);\r\n                return ({\r\n                    data: res.data,\r\n                    page: query.page,\r\n                    totalCount: parseInt(res.total)\r\n                })\r\n            }\r\n        }\r\n        options={{\r\n            sorting:true,\r\n            actionsColumnIndex: -1,\r\n            pageSize: 20,\r\n            toolbar: true,\r\n            paging: true\r\n        }}\r\n\r\n        actions={[\r\n            {\r\n                icon: ()=> <Edit/>,\r\n                tooltip: 'Edit',\r\n                onClick: (event,rowData) =>{\r\n                    history.push({\r\n                        pathname:`/bus_categories/update/${rowData.id}`,\r\n                        user:rowData\r\n                    })\r\n                }\r\n            },\r\n            {\r\n            icon: ()=><AddBox variant=\"contained\" color=\"secondary\"/>,\r\n                tooltip: 'Add New',\r\n                // This makes add button to appear in table toolbar instead for each row\r\n                isFreeAction: true,\r\n                onClick: (event, rowData) => {\r\n                    history.push(\"/bus_categories/add\")\r\n                }\r\n            }\r\n        ]}\r\n\r\n        icons={tableIcons}\r\n        editable={{\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n              handleRowDelete(oldData, resolve)\r\n            }),\r\n        }}\r\n\r\n      />\r\n    </div>);\r\n}\r\nexport default withRouter(Bus_CategoriesTable);\r\n"]},"metadata":{},"sourceType":"module"}